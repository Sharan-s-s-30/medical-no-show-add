services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbit-mq/definitions.json:/etc/rabbitmq/definitions.json
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"

  producer:
    build: ./producer
    env_file: .env
    depends_on: [rabbitmq]
    volumes:
      - ./data:/app/data:ro

  processor:
    build:
      context: ./processor
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data:ro
    env_file: .env
    depends_on: [rabbitmq]

  uploader:
    build: ./uploader
    env_file: .env
    depends_on: [rabbitmq, postgres]

  trainer:
    build:
      context: ./trainer
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - postgres

  model_server:
    build:
      context: .
      dockerfile: model_server/Dockerfile
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    env_file: .env
    depends_on:
      - model_server

volumes:
  pgdata: